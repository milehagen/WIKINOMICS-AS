<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

	<PropertyGroup>
		<TypeScriptExperimentalDecorators>true</TypeScriptExperimentalDecorators>
		<UserSecretsId>514ee19f-aed2-4148-8a9e-a7e3020a3c5c</UserSecretsId>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
	  <DefineConstants></DefineConstants>
	</PropertyGroup>

	<ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.4" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="5.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="5.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.2.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="morelinq" Version="3.3.2" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.9.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\Admin\admin.component.ts" />
    <None Remove="ClientApp\src\app\Admin\admin.module.ts" />
    <None Remove="ClientApp\src\app\Admin\Domains\domains.component.ts" />
    <None Remove="ClientApp\src\app\Admin\Domains\domains.service.ts" />
    <None Remove="ClientApp\src\app\Admin\Reports\reports.component.ts" />
    <None Remove="ClientApp\src\app\Admin\Reports\reports.service.ts" />
    <None Remove="ClientApp\src\app\Admin\Settings\settings.component.ts" />
    <None Remove="ClientApp\src\app\Admin\Settings\settings.service.ts" />
    <None Remove="ClientApp\src\app\Communities\feed\all\all.component.ts" />
    <None Remove="ClientApp\src\app\Communities\feed\feed.component.ts" />
    <None Remove="ClientApp\src\app\Communities\feed\feedPage.component.ts" />
    <None Remove="ClientApp\src\app\Communities\feed\personalFeed\personalFeed.component.ts" />
    <None Remove="ClientApp\src\app\Communities\posts\posts.component.ts" />
    <None Remove="ClientApp\src\app\Communities\shared\comments.service.ts" />
    <None Remove="ClientApp\src\app\Communities\shared\communities-shared.module.ts" />
    <None Remove="ClientApp\src\app\Communities\shared\communities\communities.service.ts" />
    <None Remove="ClientApp\src\app\Communities\shared\feedSettings\feedSettings.component.ts" />
    <None Remove="ClientApp\src\app\Communities\shared\posts\posts.service.ts" />
    <None Remove="ClientApp\src\app\Communities\shared\shared.service.ts" />
    <None Remove="ClientApp\src\app\Communities\feed\topResponses\topResponses.component.ts" />
    <None Remove="ClientApp\src\app\Models\studentSubject.ts" />
    <None Remove="ClientApp\src\app\Models\Users\Domain.ts" />
    <None Remove="ClientApp\src\app\Models\Users\Industry.ts" />
    <None Remove="ClientApp\src\app\navbar\data-sharing.service.ts" />
    <None Remove="ClientApp\src\app\navbar\navbar.service.ts" />
    <None Remove="ClientApp\src\app\Profile\profile.component.ts" />
    <None Remove="ClientApp\src\app\Users\logIn\logIn.component.ts" />
    <None Remove="ClientApp\src\app\Models\Admin\CommentReport.ts" />
    <None Remove="ClientApp\src\app\Models\Admin\PostReport.ts" />
    <None Remove="ClientApp\src\app\Models\Admin\SiteSetting.ts" />
    <None Remove="ClientApp\src\app\Models\Communities\Comment.ts" />
    <None Remove="ClientApp\src\app\Models\Communities\UserCommentVote.ts" />
    <None Remove="ClientApp\src\app\Models\Communities\PostTag.ts" />
    <None Remove="ClientApp\src\app\Models\Users\User.ts" />
    <None Remove="ClientApp\src\app\Models\Communities\UserPostVote.ts" />
    <None Remove="ClientApp\src\app\navbar\navbar.component.ts" />
    <None Remove="ClientApp\src\app\pipes\date-ago.pipe.ts" />
    <None Remove="ClientApp\src\app\Verification\verification-input.component.ts" />
    <None Remove="ClientApp\src\app\Verification\verification-receiver.component.ts" />
    <None Remove="ClientApp\src\app\Verification\verification.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\src\app\Communities\communities.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\Models\Community.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\Models\Post.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\Admin\Users\" />
    <Folder Include="ClientApp\src\app\Notification\" />
    <Folder Include="ClientApp\src\app\Users\signUp\" />
    <Folder Include="ClientApp\src\app\home\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ProjectExtensions><VisualStudio><UserProperties /></VisualStudio></ProjectExtensions>

</Project>
